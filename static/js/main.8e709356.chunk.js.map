{"version":3,"sources":["context/context.jsx","components/Title/Title.jsx","components/Loader/Loader.jsx","components/Search/Search.jsx","components/Quote/Quote.jsx","components/Details/Details.jsx","containers/App.jsx","index.js"],"names":["HeadersColorContext","React","createContext","TextColorContext","StyledTitle","styled","h1","_templateObject","props","titleColor","StyledHeader","div","_templateObject2","Title","HeadersColor","useContext","react_default","a","createElement","es","to","LoaderContainer","Loader_templateObject","Loader","TextColor","react_loading_default","type","color","SearchComponent","Search_templateObject","StyledResults","Search_templateObject2","Search","_useState","useState","results","_useState2","Object","slicedToArray","data","setData","_useState3","_useState4","query","setQuery","_useState5","_useState6","search","setSearch","_useState7","_useState8","loading","setLoading","searchCharacter","_ref","asyncToGenerator","regenerator_default","mark","_callee","queryString","page","result","wrap","_context","prev","next","Math","floor","random","concat","axios","sent","t0","console","error","stop","this","apply","arguments","useEffect","components_Loader_Loader","onSubmit","e","preventDefault","placeholder","value","onChange","target","map","item","key","id","src","image","alt","name","QuoteComponent","Quote_templateObject","Quote","getQuote","DetailsComponent","Details_templateObject","Details_templateObject2","Details","route","getCharacter","Details_StyledResults","species","status","location","components_Quote_Quote","source","createHashSource","history","createHistory","GlobalStyle","createGlobalStyle","App_templateObject","textColor","theme","fontFamily","App","styled_components_browser_esm","react","components_Title_Title","components_Search_Search","path","components_Details_Details","ReactDOM","render","containers_App","document","getElementById"],"mappings":"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","file":"static/js/main.8e709356.chunk.js","sourcesContent":["import React from \"react\";\n\nexport const HeadersColorContext = React.createContext(\"DarkSlateGrey\");\n\nexport const TextColorContext = React.createContext(\"black\");\n","import React, { useContext } from \"react\";\nimport styled from \"styled-components\";\nimport { Link } from \"@reach/router\";\n\nimport { HeadersColorContext } from \"../../context/context\";\n\nconst StyledTitle = styled.h1`\n  font-size: 49px;\n  font-family: \"Creepster\", cursive;\n  display: inline-block;\n  color: ${props => props.titleColor};\n  background-color: #fff;\n  padding: 10px 30px;\n  border-radius: 10px;\n  margin-left: 60px;\n  cursor: pointer;\n  @media (max-width: 775px) {\n    margin-left: 0px;\n  }\n`;\n\nconst StyledHeader = styled.div`\n  background-color: DarkTurquoise;\n  margin-bottom: 35px;\n  text-align: left;\n  @media (max-width: 775px) {\n    text-align: center;\n  }\n`;\n\nconst Title = () => {\n  const HeadersColor = useContext(HeadersColorContext);\n\n  return (\n    <StyledHeader>\n      <Link to=\"/\">\n        <StyledTitle titleColor={HeadersColor}>Rick and Morty</StyledTitle>\n      </Link>\n    </StyledHeader>\n  );\n};\n\nexport default Title;\n","import React, { useContext } from \"react\";\nimport ReactLoading from \"react-loading\";\nimport styled from \"styled-components\";\n\nimport { TextColorContext } from \"../../context/context\";\n\nconst LoaderContainer = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 32px;\n  font-weight: bold;\n`;\n\nconst Loader = () => {\n  const TextColor = useContext(TextColorContext);\n\n  return (\n    <LoaderContainer>\n      <span>Loading</span>\n      <ReactLoading type=\"bubbles\" color={TextColor} />\n    </LoaderContainer>\n  );\n};\n\nexport default Loader;\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport axios from \"axios\";\nimport { Link } from \"@reach/router\";\n\nimport Loader from \"../Loader/Loader\";\n\nconst SearchComponent = styled.div`\n  input {\n    font-size: 18px;\n    padding: 5px 15px;\n    color: #3b3a3a;\n  }\n\n  button {\n    font-size: 20px;\n    text-transform: uppercase;\n    padding: 5px 20px;\n    margin-left: 5px;\n    background-color: DarkTurquoise;\n    color: #fff;\n    border-radius: 5px;\n    cursor: pointer;\n    outline: none;\n  }\n`;\n\nconst StyledResults = styled.div`\n  text-align: left;\n  @media (max-width: 775px) {\n    text-align: center;\n  }\n\n  ul li {\n    display: inline-block;\n    margin: 20px;\n    vertical-align: top;\n    cursor: pointer;\n  }\n  ul li > a {\n  }\n\n  ul li span {\n    display: block;\n    text-align: center;\n    width: 200px;\n  }\n\n  a img {\n    width: 200px;\n    cursor: pointer;\n  }\n`;\n\nconst Search = () => {\n  const [data, setData] = useState({ results: [] });\n  const [query, setQuery] = useState(\"\");\n  const [search, setSearch] = useState(\"\");\n  const [loading, setLoading] = useState(true);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setSearch(query);\n  };\n\n  const searchCharacter = async () => {\n    try {\n      let queryString = \"\";\n      const page = Math.floor(Math.random() * 19) + 1;\n\n      if (search) {\n        queryString = `?name=${search}`;\n      } else {\n        queryString = `?page=${page}`;\n      }\n\n      const result = await axios(\n        `https://rickandmortyapi.com/api/character/${queryString}`\n      );\n\n      setData(result.data);\n      setLoading(false);\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  useEffect(\n    () => {\n      searchCharacter();\n    },\n    [search]\n  );\n\n  return loading ? (\n    <Loader />\n  ) : (\n    <SearchComponent>\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          placeholder=\"rick, morty, jerry, etc\"\n          value={query}\n          onChange={e => setQuery(e.target.value)}\n        />\n        <button type=\"submit\">Search</button>\n      </form>\n      <StyledResults>\n        <ul>\n          {data.results.map(item => (\n            <li key={item.id}>\n              <Link to={`/details/${item.id}`}>\n                <img src={item.image} alt={item.name} />\n\n                <span>{item.name}</span>\n              </Link>\n            </li>\n          ))}\n        </ul>\n      </StyledResults>\n    </SearchComponent>\n  );\n};\n\nexport default Search;\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport axios from \"axios\";\n\nimport Loader from \"../Loader/Loader\";\n\nconst QuoteComponent = styled.div`\n  font-size: 32px;\n  color: #7d7a7a;\n  max-width: 70%;\n  margin: 30px auto;\n`;\n\nconst Quote = () => {\n  const [data, setData] = useState({ results: [] });\n  const [loading, setLoading] = useState(true);\n\n  const getQuote = async () => {\n    try {\n      const result = await axios(\n        `http://loremricksum.com/api/?paragraphs=1&quotes=1`\n      );\n\n      setData(result.data);\n      setLoading(false);\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  useEffect(() => {\n    getQuote();\n  }, []);\n  return loading ? (\n    <Loader />\n  ) : (\n    <QuoteComponent>\n      <p>{data.data}</p>\n    </QuoteComponent>\n  );\n};\n\nexport default Quote;\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport axios from \"axios\";\n\nimport Loader from \"../Loader/Loader\";\nimport Quote from \"../Quote/Quote\";\n\nconst DetailsComponent = styled.div`\n  text-align: center;\n`;\n\nconst StyledResults = styled.div`\n  text-align: center;\n\n  ul li {\n    display: inline-block;\n    margin: 20px;\n    vertical-align: top;\n    cursor: pointer;\n  }\n  ul li > a {\n  }\n\n  ul li span {\n    display: block;\n    text-align: center;\n    width: 200px;\n  }\n\n  a img {\n    width: 200px;\n    cursor: pointer;\n  }\n`;\n\nconst Details = route => {\n  const [data, setData] = useState({ results: [] });\n  const [loading, setLoading] = useState(true);\n\n  const getCharacter = async () => {\n    try {\n      const result = await axios(\n        `https://rickandmortyapi.com/api/character/${route.id}`\n      );\n\n      setData(result.data);\n      setLoading(false);\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  useEffect(() => {\n    getCharacter();\n  }, []);\n  return loading ? (\n    <Loader />\n  ) : (\n    <DetailsComponent>\n      <StyledResults>\n        <img src={data.image} alt={data.name} />\n        <h3>{data.name}</h3>\n        <div>\n          Race : {data.species} <span>{data.status}</span>\n        </div>\n        <div>Estimated location : {data.location.name}</div>\n      </StyledResults>\n      <Quote />\n    </DetailsComponent>\n  );\n};\n\nexport default Details;\n","import React, { useContext, Fragment } from \"react\";\nimport { createGlobalStyle, ThemeProvider } from \"styled-components\";\nimport { createHistory, LocationProvider, Router } from \"@reach/router\";\nimport createHashSource from \"hash-source\";\n\nimport Title from \"../components/Title/Title\";\nimport { TextColorContext } from \"../context/context\";\nimport Search from \"../components/Search/Search\";\nimport Details from \"../components/Details/Details\";\n\nlet source = createHashSource();\nlet history = createHistory(source);\n\nconst GlobalStyle = createGlobalStyle`\n  body {\n    color: ${props => props.textColor};\n    font-family: ${props => props.theme.fontFamily};\n    overflow-y: scroll;\n    text-align: center;\n    a {\n    text-decoration: none;\n    color: #000;\n    }\n    @media (max-width: 775px) {\n      ul {\n        padding: 0;\n      }\n    }\n  }\n`;\n\nconst App = () => {\n  const TextColor = useContext(TextColorContext);\n\n  return (\n    <LocationProvider history={history}>\n      <ThemeProvider\n        theme={{ fontFamily: \"Georgia, Times New Roman, Times, serif\" }}\n      >\n        <Fragment>\n          <GlobalStyle textColor={TextColor} />\n          <Title />\n\n          <Router>\n            <Search path=\"/\" />\n            <Details path=\"/details/:id\" />\n          </Router>\n        </Fragment>\n      </ThemeProvider>\n    </LocationProvider>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./containers/App\";\nimport \"./fonts.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}